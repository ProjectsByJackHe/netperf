name: Observe Lab

on:
  workflow_call:
    inputs:
      lab-matrix:
        description: "Lab jobs to observe"
        required: true
        type: string
      project:
        description: "The project dispatch workflows to"
        required: true
        type: string
jobs:
  lab-observer:
    name: Oracle
    runs-on: windows-latest
    steps:
    - name: Observing Lab State...
      run: |
        $lab_matrix = ConvertFrom-Json ${{ inputs.lab-matrix }}

        $truth_table = @()

        $headers = @{
            "Accept" = "application/vnd.github+json"
            "Authorization" = "Bearer ${{ secrets.GITHUB_TOKEN }}"
            "X-GitHub-Api-Version" = "2022-11-28"
        }

        function DisplayTruthTable {
                       
        }

        function Get-Jobs {
            param([string]$runId)
            $url = "https://api.github.com/repos/microsoft/netperf/actions/runs/$runId/jobs"
            Write-Debug "GET $url"
            return ((Invoke-WebRequest -Uri $url -Method GET -Headers $headers).Content | ConvertFrom-Json).jobs
        }

        if (${{ github.run_attempt }} -eq 1) {
          foreach ($todo in $lab_matrix) {
            $truth_table += [PSCustomObject]@{
              "todo" = $todo
              "current_state" = "AWAITING_MASTER_SLAVE_RESET"
            }
          }
        } else {
          $jobs = Get-Jobs -runId ${{ github.run_id }}
          $missed_jobs = @()
          foreach ($todo in $lab_matrix) {
            // TODO
          }
          while ($missed_jobs.Count -gt 0) {
            $tmp_missed_jobs = @()
            $jobs = Get-Jobs -runId ${{ github.run_id }}
            foreach ($todo in $missed_jobs) {
              // TODO
            }
          }
        }

      shell: pwsh
